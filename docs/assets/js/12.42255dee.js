(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{379:function(v,_,s){"use strict";s.r(_);var r=s(46),t=Object(r.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[v._v("#")]),v._v(" Promise")]),v._v(" "),s("h2",{attrs:{id:"promises-a"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promises-a"}},[v._v("#")]),v._v(" Promises/A+")]),v._v(" "),s("h3",{attrs:{id:"_1-术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-术语"}},[v._v("#")]),v._v(" 1. 术语")]),v._v(" "),s("ol",[s("li",[s("strong",[v._v("“promise”")]),v._v(" 是一个具有 "),s("strong",[v._v("then")]),v._v(" 方法的对象或函数，该方法的行为符合本规范。")]),v._v(" "),s("li",[s("strong",[v._v("“thenable”")]),v._v(" 是一个具有 "),s("strong",[v._v("then")]),v._v(" 方法的对象或函数。")]),v._v(" "),s("li",[s("strong",[v._v("“value”")]),v._v(" 是任何 JavaScript 合法值。")]),v._v(" "),s("li",[s("strong",[v._v("“exception”")]),v._v(" 是一个用 "),s("strong",[v._v("throw")]),v._v(" 语句抛出的异常。")]),v._v(" "),s("li",[s("strong",[v._v("“reason”")]),v._v(" 是一个用于指示为何 "),s("strong",[v._v("promise")]),v._v(" 被拒绝的原因。")])]),v._v(" "),s("h3",{attrs:{id:"_2-要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-要求"}},[v._v("#")]),v._v(" 2. 要求")]),v._v(" "),s("h4",{attrs:{id:"_2-1-promise-状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-promise-状态"}},[v._v("#")]),v._v(" 2.1. promise 状态")]),v._v(" "),s("p",[v._v("一个 "),s("strong",[v._v("promise")]),v._v(" 必定处于这三个状态之一："),s("strong",[v._v("pending")]),v._v(", "),s("strong",[v._v("fulfilled")]),v._v(", "),s("strong",[v._v("rejected")]),v._v("。")]),v._v(" "),s("p",[v._v("2.1.1. 当处于 "),s("strong",[v._v("pending")]),v._v(" 时，一个 "),s("strong",[v._v("promise")]),v._v(" 可能转变成 "),s("strong",[v._v("fulfilled")]),v._v(" 或 "),s("strong",[v._v("rejected")]),v._v("。")]),v._v(" "),s("p",[v._v("2.1.2. 当处于 "),s("strong",[v._v("fulfilled")]),v._v(" 时，一个 "),s("strong",[v._v("promise")]),v._v(" 不能再转变成其他状态，且此时拥有一个不可变的 "),s("strong",[v._v("value")]),v._v("。")]),v._v(" "),s("p",[v._v("2.1.3. 当处于 "),s("strong",[v._v("rejected")]),v._v(" 时，一个 "),s("strong",[v._v("promise")]),v._v(" 不能再转变成其他状态，且此时拥有一个不可变的 "),s("strong",[v._v("reason")]),v._v("。")]),v._v(" "),s("p",[v._v("履行 "),s("strong",[v._v("promise")]),v._v(" 是指将该 "),s("strong",[v._v("promise")]),v._v(" 的状态从 "),s("strong",[v._v("pending")]),v._v(" 改为 "),s("strong",[v._v("fulfilled")]),v._v(" 并提供一个 "),s("strong",[v._v("value")]),v._v("。")]),v._v(" "),s("p",[v._v("拒绝 "),s("strong",[v._v("promise")]),v._v(" 是指将该 "),s("strong",[v._v("promise")]),v._v(" 的状态从 "),s("strong",[v._v("pending")]),v._v(" 改为 "),s("strong",[v._v("rejected")]),v._v(" 并提供一个 "),s("strong",[v._v("reason")]),v._v("。")]),v._v(" "),s("h4",{attrs:{id:"_2-2-then-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-then-方法"}},[v._v("#")]),v._v(" 2.2. then 方法")]),v._v(" "),s("p",[v._v("一个 "),s("strong",[v._v("promise")]),v._v(" 必须提供一个 "),s("strong",[v._v("then")]),v._v(" 方法来访问它当前或最终的 "),s("strong",[v._v("value")]),v._v(" 或 "),s("strong",[v._v("reason")]),v._v("。")]),v._v(" "),s("p",[v._v("一个 "),s("strong",[v._v("promise")]),v._v(" 的 "),s("strong",[v._v("then")]),v._v(" 方法接收2个参数：")]),v._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[v._v("promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[v._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("onFulfilled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" onRejected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])]),s("p",[v._v("2.2.1. "),s("strong",[v._v("onFulfilled")]),v._v(" 和 "),s("strong",[v._v("onRejected")]),v._v(" 都是可选参数，当它们不是函数时，必须直接忽略。")]),v._v(" "),s("p",[v._v("2.2.2. 如果 "),s("strong",[v._v("onFulfilled")]),v._v(" 是一个函数，那么")]),v._v(" "),s("ul",[s("li",[v._v("它必须在 "),s("strong",[v._v("promise")]),v._v(" 状态变为 "),s("strong",[v._v("fulfilled")]),v._v(" 后被调用，且 "),s("strong",[v._v("promise")]),v._v(" 的 "),s("strong",[v._v("value")]),v._v(" 作为它的第一个参数。")]),v._v(" "),s("li",[v._v("它不能在 "),s("strong",[v._v("promise")]),v._v(" 状态变为 "),s("strong",[v._v("fulfilled")]),v._v(" 之前调用。")]),v._v(" "),s("li",[v._v("它不能调用超过1次。")])]),v._v(" "),s("p",[v._v("2.2.3. 如果 "),s("strong",[v._v("onRejected")]),v._v(" 是一个函数，那么")]),v._v(" "),s("ul",[s("li",[v._v("它必须在 "),s("strong",[v._v("promise")]),v._v(" 状态变为 "),s("strong",[v._v("rejected")]),v._v(" 后被调用，且 "),s("strong",[v._v("promise")]),v._v(" 的 "),s("strong",[v._v("reason")]),v._v(" 作为它的第一个参数。")]),v._v(" "),s("li",[v._v("它不能在 "),s("strong",[v._v("promise")]),v._v(" 状态变为 "),s("strong",[v._v("rejected")]),v._v(" 之前调用。")]),v._v(" "),s("li",[v._v("它不能调用超过1次。")])]),v._v(" "),s("p",[v._v("2.2.4. "),s("strong",[v._v("onFulfilled")]),v._v(" 或 "),s("strong",[v._v("onRejected")]),v._v(" 必须等到执行栈中同步代码执行之后才能调用。")]),v._v(" "),s("p",[v._v("2.2.5. "),s("strong",[v._v("onFulfilled")]),v._v(" 与 "),s("strong",[v._v("onRejected")]),v._v(" 必须当作一个普通函数调用，内部不使用 this。")]),v._v(" "),s("p",[v._v("2.2.6. 同一个 "),s("strong",[v._v("promise")]),v._v(" 的 "),s("strong",[v._v("then")]),v._v(" 方法可以调用多次")]),v._v(" "),s("ul",[s("li",[v._v("当 "),s("strong",[v._v("promise")]),v._v(" 状态变为 "),s("strong",[v._v("fulfilled")]),v._v(" 时，所有 "),s("strong",[v._v("onFulfilled")]),v._v(" 回调必须按照 "),s("strong",[v._v("then")]),v._v(" 方法调用顺序执行。")]),v._v(" "),s("li",[v._v("当 "),s("strong",[v._v("promise")]),v._v(" 状态变为 "),s("strong",[v._v("rejected")]),v._v(" 时，所有 "),s("strong",[v._v("onRejected")]),v._v(" 回调必须按照 "),s("strong",[v._v("then")]),v._v(" 方法调用顺序执行。")])]),v._v(" "),s("p",[v._v("2.2.7. "),s("strong",[v._v("then")]),v._v(" 方法必须返回一个 "),s("strong",[v._v("promise")])]),v._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[v._v("promise2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" promise1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[v._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("onFulfilled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" onRejected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])]),s("ul",[s("li",[v._v("如果 "),s("strong",[v._v("onFulfilled")]),v._v(" 或 "),s("strong",[v._v("onRejected")]),v._v(" 调用返回一个值 "),s("strong",[v._v("x")]),v._v("，那么执行承诺处理流程 "),s("strong",[v._v("[[Resolve]](promise2, x)")]),v._v("。")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("onFulfilled")]),v._v(" 或 "),s("strong",[v._v("onRejected")]),v._v(" 抛出一个异常 "),s("strong",[v._v("e")]),v._v("，那么必须以 "),s("strong",[v._v("e")]),v._v(" 作为 "),s("strong",[v._v("reason")]),v._v(" 拒绝 "),s("strong",[v._v("promise2")]),v._v("。")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("onFulfilled")]),v._v(" 不是一个函数并且 "),s("strong",[v._v("promise1")]),v._v(" 状态变为 "),s("strong",[v._v("fulfilled")]),v._v("，那么 "),s("strong",[v._v("promise2")]),v._v(" 的状态必须变为 "),s("strong",[v._v("fulfilled")]),v._v(" 且与 "),s("strong",[v._v("promise1")]),v._v(" 拥有同样的 "),s("strong",[v._v("value")]),v._v("。")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("onRejected")]),v._v(" 不是一个函数并且 "),s("strong",[v._v("promise1")]),v._v(" 状态变为 "),s("strong",[v._v("rejected")]),v._v("，那么 "),s("strong",[v._v("promise2")]),v._v(" 的状态必须变为 "),s("strong",[v._v("rejected")]),v._v(" 且与 "),s("strong",[v._v("promise1")]),v._v(" 拥有同样的 "),s("strong",[v._v("reason")]),v._v("。")])]),v._v(" "),s("h4",{attrs:{id:"_2-3-承诺处理流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-承诺处理流程"}},[v._v("#")]),v._v(" 2.3. 承诺处理流程")]),v._v(" "),s("p",[s("strong",[v._v("承诺处理流程")]),v._v(" 是一个抽象化的操作，它接收一个 "),s("strong",[v._v("promise")]),v._v(" 和一个 "),s("strong",[v._v("value")]),v._v("，可以表示成 "),s("strong",[v._v("[[Resolve]](promise, x)")]),v._v("。如果 "),s("strong",[v._v("x")]),v._v(" 是一个 "),s("strong",[v._v("thenable")]),v._v("，并且 "),s("strong",[v._v("x")]),v._v(" 的行为表现得像一个 "),s("strong",[v._v("promise")]),v._v("，那么会尝试让输入的 "),s("strong",[v._v("promise")]),v._v(" 采用 "),s("strong",[v._v("x")]),v._v(" 的状态，否则会以 "),s("strong",[v._v("x")]),v._v(" 作为 "),s("strong",[v._v("value")]),v._v(" 履行 "),s("strong",[v._v("promise")]),v._v("。")]),v._v(" "),s("p",[v._v("这种处理方式允许不同的 "),s("strong",[v._v("promise")]),v._v(" 实现之间互相操作，前提是它们都暴露了符合本规范的 "),s("strong",[v._v("then")]),v._v(" 方法。")]),v._v(" "),s("p",[v._v("要运行 "),s("strong",[v._v("[[Resolve]](promise, x)")]),v._v("，请执行以下步骤：")]),v._v(" "),s("p",[v._v("2.3.1. 如果 "),s("strong",[v._v("promise")]),v._v(" 和 "),s("strong",[v._v("x")]),v._v(" 引用同一个对象，那么就拒绝 "),s("strong",[v._v("promise")]),v._v(" 并以 "),s("strong",[v._v("TypeError")]),v._v(" 作为 "),s("strong",[v._v("reason")]),v._v("。")]),v._v(" "),s("p",[v._v("2.3.2. 如果 "),s("strong",[v._v("x")]),v._v(" 是一个 "),s("strong",[v._v("promise")]),v._v("，那么采用它的状态：")]),v._v(" "),s("ul",[s("li",[v._v("如果 "),s("strong",[v._v("x")]),v._v(" 处于 "),s("strong",[v._v("pending")]),v._v("，那么"),s("strong",[v._v("promise")]),v._v(" 必须保持 "),s("strong",[v._v("pending")]),v._v(" 直到 "),s("strong",[v._v("x")]),v._v(" 状态转变。")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("x")]),v._v(" 处于 "),s("strong",[v._v("fulfilled")]),v._v("，那么以同样的 "),s("strong",[v._v("value")]),v._v(" 履行 "),s("strong",[v._v("promise")]),v._v("。")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("x")]),v._v(" 处于 "),s("strong",[v._v("rejected")]),v._v("，那么以同样的 "),s("strong",[v._v("reason")]),v._v(" 拒绝 "),s("strong",[v._v("promise")]),v._v("。")])]),v._v(" "),s("p",[v._v("2.3.3. 否则，如果 "),s("strong",[v._v("x")]),v._v(" 是一个对象或函数，那么")]),v._v(" "),s("ul",[s("li",[v._v("首先将 "),s("strong",[v._v("x.then")]),v._v(" 缓存到变量 "),s("strong",[v._v("then")]),v._v("；")]),v._v(" "),s("li",[v._v("如果检索 "),s("strong",[v._v("x.then")]),v._v(" 属性时抛出异常 "),s("strong",[v._v("e")]),v._v("，那么以 "),s("strong",[v._v("e")]),v._v(" 作为 "),s("strong",[v._v("reason")]),v._v(" 拒绝 "),s("strong",[v._v("promise")]),v._v("；")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("then")]),v._v(" 是一个函数，那么执行 "),s("strong",[v._v("then.call(x, resolvePromise, rejectPromise)")]),v._v(" "),s("ul",[s("li",[v._v("如果 "),s("strong",[v._v("resolvePromise")]),v._v(" 以参数 "),s("strong",[v._v("y")]),v._v(" 被调用，那么运行 "),s("strong",[v._v("[[Resolve]](promise, y)")]),v._v("；")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("rejectPromise")]),v._v(" 以参数 "),s("strong",[v._v("r")]),v._v(" 被调用，那么以 "),s("strong",[v._v("r")]),v._v(" 作为 "),s("strong",[v._v("reason")]),v._v(" 拒绝 "),s("strong",[v._v("promise")]),v._v("；")]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("resolvePromise")]),v._v(" 和 "),s("strong",[v._v("rejectPromise")]),v._v(" 都被调用甚至多次调用，那么只处理第一次调用；")]),v._v(" "),s("li",[v._v("如果调用 "),s("strong",[v._v("then")]),v._v(" 抛出异常 "),s("strong",[v._v("e")]),v._v(" "),s("ul",[s("li",[v._v("如果 "),s("strong",[v._v("resolvePromise")]),v._v(" 或 "),s("strong",[v._v("rejectPromise")]),v._v(" 已被调用，就忽略之；")]),v._v(" "),s("li",[v._v("否则以 "),s("strong",[v._v("e")]),v._v(" 作为 "),s("strong",[v._v("reason")]),v._v(" 拒绝 "),s("strong",[v._v("promise")])])])])])]),v._v(" "),s("li",[v._v("如果 "),s("strong",[v._v("then")]),v._v(" 不是一个函数，那么以 "),s("strong",[v._v("x")]),v._v(" 作为 "),s("strong",[v._v("value")]),v._v(" 履行 "),s("strong",[v._v("promise")]),v._v("。")])]),v._v(" "),s("p",[v._v("2.3.4. 如果 "),s("strong",[v._v("x")]),v._v(" 不是对象或函数，那么以 "),s("strong",[v._v("x")]),v._v(" 作为 "),s("strong",[v._v("value")]),v._v(" 履行 "),s("strong",[v._v("promise")]),v._v("。")]),v._v(" "),s("p",[v._v("如果一个 "),s("strong",[v._v("promise")]),v._v(" 通过一个参与循环 "),s("strong",[v._v("thenable")]),v._v(" 链的 "),s("strong",[v._v("thenable")]),v._v(" 来解析，这样 "),s("strong",[v._v("[[Resolve]](promise, x)")]),v._v(" 最终会再次调用 "),s("strong",[v._v("[[Resolve]](promise, x)")]),v._v("，从而陷入无限递归。本规范鼓励但是不要求实现一个机制来检测这样的递归，并以 "),s("strong",[v._v("TypeError")]),v._v(" 作为 "),s("strong",[v._v("reason")]),v._v(" 拒绝这个 "),s("strong",[v._v("promise")]),v._v("。")])])}),[],!1,null,null,null);_.default=t.exports}}]);